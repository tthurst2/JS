<!DOCTYPE html>

<head>
	<title>Home Address</title>
	<meta http-equiv="X-UA-Compatible" content="IE=edge,chrome=IE8">
	<meta charset="utf-8">
	<meta http-equiv="Pragma" content="No-Cache">
	<meta http-equiv="Expires" content="Mon, 01 Jan 1990 00:00:01 GMT">
	<script src="/lawson/webappjs/common.js"></script>
	<script src="/lawson/webappjs/commonHTTP.js"></script>
	<script src="/lawson/webappjs/data.js"></script>
	<script src="/lawson/webappjs/transaction.js"></script>
	<script src="/lawson/webappjs/user.js"></script>
	<script src="/lawson/xhrnet/email.js"></script>
	<script src="/lawson/xhrnet/esscommon80.js"></script>
	<script src="/lawson/xhrnet/statesuscan.js"></script>
	<script src="/lawson/xhrnet/empinfo.js"></script>
	<script src="/lawson/xhrnet/prlockout.js"></script>
	<script src="/lawson/xhrnet/instctrycdselect.js"></script>
	<script src="/lawson/xhrnet/xml/xmldateroutines.js"></script>
	<script src="/lawson/xhrnet/xml/xmlcommon.js"></script>
	<script src="/lawson/xhrnet/ui/ui.js"></script>
	<script src="/lawson/webappjs/javascript/objects/Transaction.js"></script>
	<script src="/lawson/webappjs/javascript/objects/ProcessFlow.js"></script>
	<script>
		var fromTask = (unescape(window.location.search)) ? true : false;
		var parentTask = (fromTask) ? getVarFromString("from", unescape(window.location.search)) : "";
		var addrTabs;
		var EmailError = false;
		var DoEmail = 0;
		var EmailFrom = "";
		var EmailTo = "";
		var addrform = new Object();
		var saddrform = new Object();
		var EmpInfo = new Array();
		EmpInfo.work_country = "";
		var AddType = "H";
		var appObj;
		var onLoad = true;
		seaAlert = parent.seaAlert;

		function OpenMoveEvent() {
			authUser = null;
			try {
				// Check if a parent or opener document has already done an authenticate, otherwise go get the webuser info.
				if (parent && typeof (parent.authUser) != "undefined" && parent.authUser != null) {
					authUser = parent.authUser
					if (typeof (parent.EmpInfo) != "undefined" && parent.EmpInfo != null)
						EmpInfo = parent.EmpInfo
				}
				else if (opener && typeof (opener.authUser) != "undefined" && opener.authUser != null) {
					authUser = opener.authUser
					if (typeof (opener.EmpInfo) != "undefined" && opener.EmpInfo != null)
						EmpInfo = opener.EmpInfo
				}
			}
			catch (e) {
				authUser = null;
				EmpInfo = new Array();
				CalledEmpInfo = false;
			}
			if (!authUser) {
				authenticate("frameNm='jsreturn'|funcNm='InitMoveEvent()'|officeObjects=true|sysenv=true|desiredEdit='EM'")
				return
			}
			InitMoveEvent();
		}

		function AfterLockout(dlgWnd) {
			if (parentTask != "" && parentTask != "main")
				FinishAddressChange();
		}

		function InitMoveEvent() {
			stylePage();
			setWinTitle(getSeaPhrase("HOME_ADDR_0", "ESS"));
			startProcessing(getSeaPhrase("PROCESSING_WAIT", "ESS"), LoadMoveEvent);
		}

		function LoadMoveEvent() {
			if (!appObj)
				appObj = new AppVersionObject(authUser.prodline, "HR");
			// if you call getAppVersion() right away and the IOS object isn't set up yet,
			// then the code will be trying to load the sso.js file, and your call for
			// the appversion will complete before the ios version is set
			if (iosHandler.getIOS() == null || iosHandler.getIOSVersionNumber() == null) {
				setTimeout("LoadMoveEvent()", 10);
				return;
			}
			if (emssObjInstance.emssObj.payrollLockout) {
				if (appObj && appObj.getLongAppVersion() != null && appObj.getLongAppVersion().toString() >= "09.00.01.09") {
					if (isPRLockedOut("A", authUser.company, authUser.employee)) {
						stopProcessing();
						parent.seaAlert(getSeaPhrase("PR_LOCKED_OUT", "SEA"), "", null, "error", AfterLockout);
						if (!parent.styler.showLDS && !parent.styler.showInfor)
							AfterLockout();
						return;
					}
				}
			}
			GrabStates("GetCountryCodes()");
		}

		function GetCountryCodes() {
			GetInstCtryCdSelect(authUser.prodline, "GetEmailAddress()")
		}

		function GetEmailAddress() {
			var syr_company = authUser.company.toString();
			for (var i = syr_company.length; i < 4; i++)
				syr_company = "0" + syr_company;
			var object = new DMEObject(authUser.prodline, "SYSRULES");
			object.out = "JAVASCRIPT";
			object.index = "syrset1";
			object.field = "email-address;alphadata2";
			object.key = "EMAILNOTIFICATION=HR=" + syr_company + "=" + escape(" ", 1) + "=1=N=N";
			object.max = "1";
			object.func = "GetEmpAddress()";
			object.debug = false;
			DME(object, "jsreturn");
		}

		function GetEmpAddress() {
			if (self.jsreturn.NbrRecs) {
				DoEmail = self.jsreturn.record[0].alphadata2;
				EmailTo = self.jsreturn.record[0].email_address;
			}
			var fields = "addr1;addr2;addr3;addr4;city;state;zip;country-code;first-name;last-name;"
				+ "fica-nbr;process-level;department;work-country;county;email-address;tax-filter;"
				+ "paemployee.hm-phone-cntry;paemployee.hm-phone-nbr;process-level.emp-tax-addr;"
				+ "process-level.tax-filter;paemployee.supp-addr1;paemployee.supp-addr2;paemployee.supp-addr3;"
				+ "paemployee.supp-addr4;paemployee.supp-city;paemployee.supp-state;paemployee.supp-zip;"
				+ "paemployee.supp-cntry-cd;paemployee.supp-county;paemployee.supp-phone-cnt;paemployee.supp-phone-nbr";
			GetEmpInfo(authUser.prodline, authUser.company, authUser.employee, "employee", fields, "DrawMoveScreen()");
		}

		function DrawMoveScreen() {
			var addrLineSize = (appObj && appObj.getLongAppVersion() != null && appObj.getLongAppVersion().toString() >= "10.00.00.03") ? 57 : 30;
			EmailFrom = EmpInfo.email_address;
			if (typeof (EmailFrom) == "undefined" || EmailFrom == null || NonSpace(EmailFrom) == 0)
				EmailFrom = EmailTo;
			if (typeof (addrTabs) == "undefined")
				addrTabs = new uiTabSet("addrTabs", new Array(getSeaPhrase("HOME", "ESS"), getSeaPhrase("SUPPLEMENTAL", "ESS")));
			var toolTip = uiDateToolTip(getSeaPhrase("HOME_ADDR_1", "ESS"));

			// Home address tab
			var tab0Html = uiRequiredFooter()
				+ '<form name="addressform" style="padding-top:10px"><table border="0" cellspacing="0" cellpadding="0" role="presentation">'
				+ '<tr><td class="fieldlabelbold"><label id="dateneededLbl" for="dateneeded">' + getSeaPhrase("HOME_ADDR_1", "ESS") + '</label></td>'
				+ '<td class="plaintablecell" nowrap><input class="inputbox" type="text" styler="calendar" id="dateneeded" name="dateneeded" value="" size="10" maxlength="10" onfocus="this.select()" aria-labelledby="dateneededLbl dateneededFmt">'
				+ '<a href="javascript:parent.DateSelect(\'dateneeded\');" styler="hidden" title="' + toolTip + '" aria-label="' + toolTip + '">' + uiCalendarIcon() + '</a>' + uiRequiredIcon() + '</td></tr>'
				+ '<tr style="height:30px"><td>&nbsp;</td><td style="padding-left:5px;padding-top:2px;vertical-align:top">' + uiDateFormatSpan("dateneededFmt") + '</td></tr>'
				+ '<tr><td class="fieldlabelbold"><label for="addr1">' + getSeaPhrase("ADDR_1", "ESS") + '</label></td>'
				+ '<td class="plaintablecell" nowrap><input class="inputbox" type="text" styler="textbox" id="addr1" name="addr1" value="' + fixQuote(EmpInfo.addr1) + '" size="' + addrLineSize + '" maxlength="' + addrLineSize + '" onfocus="this.select()"></td></tr>'
				+ '<tr><td class="fieldlabelbold"><label for="addr2">' + getSeaPhrase("ADDR_2", "ESS") + '</label></td>'
				+ '<td class="plaintablecell" nowrap><input class="inputbox" type="text" styler="textbox" id="addr2" name="addr2" value="' + fixQuote(EmpInfo.addr2) + '" size="30" maxlength="30" onfocus="this.select()"></td></tr>'
				+ '<tr><td class="fieldlabelbold"><label for="addr3">' + getSeaPhrase("ADDR_3", "ESS") + '</label></td>'
				+ '<td class="plaintablecell" nowrap><input class="inputbox" type="text" styler="textbox" id="addr3" name="addr3" value="' + fixQuote(EmpInfo.addr3) + '" size="30" maxlength="30" onfocus="this.select()"></td></tr>'
				+ '<tr><td class="fieldlabelbold"><label for="addr4">' + getSeaPhrase("ADDR_4", "ESS") + '</label></td>'
				+ '<td class="plaintablecell" nowrap><input class="inputbox" type="text" styler="textbox" id="addr4" name="addr4" value="' + fixQuote(EmpInfo.addr4) + '" size="30" maxlength="30" onfocus="this.select()"></td></tr>'
				+ '<tr><td class="fieldlabelbold"><label for="city">' + getSeaPhrase("CITY_OR_ADDR_5", "ESS") + '</label></td>'
				+ '<td class="plaintablecell" nowrap><input class="inputbox" type="text" styler="textbox" id="city" name="city" value="' + fixQuote(EmpInfo.city) + '" size="18" maxlength="18" onfocus="this.select()"></td></tr>'
				+ '<tr><td class="fieldlabelbold"><label for="state">' + getSeaPhrase("HOME_ADDR_6", "ESS") + '</label></th>'
				+ '<td id="stateCell" class="plaintablecell" nowrap><select class="inputbox" styler="combobox" id="state" name="state">' + BuildStateSelect(EmpInfo.state) + '</select></td></tr>'
				+ '<tr><td class="fieldlabelbold"><label for="zip">' + getSeaPhrase("HOME_ADDR_7", "ESS") + '</label></td>'
				+ '<td class="plaintablecell" nowrap><input class="inputbox" class="fieldlabelbold" type="text" styler="textbox" id="zip" name="zip" value="' + fixQuote(EmpInfo.zip) + '" size="10" maxlength="10" onfocus="this.select()"></td></tr>'
				+ '<tr><td class="fieldlabelbold"><label for="county">' + getSeaPhrase("COUNTY_ONLY", "ESS") + '</label></td>'
				+ '<td class="plaintablecell" nowrap><input class="inputbox" type="text" styler="textbox" id="county" name="county" value="' + fixQuote(EmpInfo.county) + '" size="25" maxlength="25" onfocus="this.select()"></td></tr>'
				+ '<tr><td class="fieldlabelbold"><label for="country">' + getSeaPhrase("COUNTRY_ONLY", "ESS") + '</label></td>'
				+ '<td class="plaintablecell" nowrap><select class="inputbox" styler="combobox" id="country" name="country">' + DrawInstCtryCdSelect(EmpInfo.country_code) + '</select></td></tr>'
				+ '<tr><td class="fieldlabelbold"><label for="hmphonenbr">' + getSeaPhrase("PHONE", "ESS") + '</label></td>'
				+ '<td class="plaintablecell" nowrap><input class="inputbox" type="text" styler="textbox" id="hmphonenbr" name="hmphonenbr" value="' + fixQuote(EmpInfo.paemployee_hm_phone_nbr) + '" size="15" maxlength="15" onfocus="this.select()"></td></tr>'
				+ '<tr><td class="fieldlabelbold"><label id="hmctrycd" for="hmphonecntry" title="' + getSeaPhrase("COUNTRY_CODE_HELP_TEXT", "ESS") + '">' + getSeaPhrase("PHONE_COUNTRY_CODE", "ESS") + '</label></td>'
				+ '<td class="plaintablecell" nowrap><input class="inputbox" type="text" styler="textbox" id="hmphonecntry" name="hmphonecntry" value="' + fixQuote(EmpInfo.paemployee_hm_phone_cntry) + '" size="3" maxlength="3" onfocus="this.select()" aria-describedby="hmphonecntryHelpTxt"><span id="hmphonecntryHelpTxt" class="offscreen">' + getSeaPhrase("COUNTRY_CODE_HELP_TEXT", "ESS") + '</span></td></tr>'
				+ '<tr><td>&nbsp;</td><td class="plaintablecell">'
			if (parentTask != "" && parentTask != "main") {
				tab0Html += uiButton(getSeaPhrase(getSeaPhrase("UPDATE","ESS"), "ESS"), "parent.validateAddress(0);return false", "margin-top:10px")
					+ uiButton(getSeaPhrase("CANCEL", "ESS"), "parent.FinishAddressChange()", "margin-left:5px;margin-top:10px")
			}
			else
				tab0Html += uiButton(getSeaPhrase("UPDATE","ESS"), "parent.validateAddress(0);return false", "margin-top:10px")
			tab0Html += '</td></tr></table></form>'
			// Supplemental address tab
			var tab1Html = '<form name="supplementalform" style="padding-top:10px"><table border="0" cellspacing="0" cellpadding="0" role="presentation">'
				+ '<tr><td class="fieldlabelbold"><label for="saddr1">' + getSeaPhrase("ADDR_1", "ESS") + '</label></td>'
				+ '<td class="plaintablecell" nowrap><input class="inputbox" type="text" styler="textbox" id="saddr1" name="saddr1" value="' + fixQuote(EmpInfo.paemployee_supp_addr1) + '" size="' + addrLineSize + '" maxlength="' + addrLineSize + '" onfocus="this.select()"></td></tr>'
				+ '<tr><td class="fieldlabelbold"><label for="saddr2">' + getSeaPhrase("ADDR_2", "ESS") + '</label></td>'
				+ '<td class="plaintablecell" nowrap><input class="inputbox" type="text" styler="textbox" id="saddr2" name="saddr2" value="' + fixQuote(EmpInfo.paemployee_supp_addr2) + '" size="30" maxlength="30" onfocus="this.select()"></td></tr>'
				+ '<tr><td class="fieldlabelbold"><label for="saddr3">' + getSeaPhrase("ADDR_3", "ESS") + '</label></td>'
				+ '<td class="plaintablecell" nowrap><input class="inputbox" type="text" styler="textbox" id="saddr3" name="saddr3" value="' + fixQuote(EmpInfo.paemployee_supp_addr3) + '" size="30" maxlength="30" onfocus="this.select()"></td></tr>'
				+ '<tr><td class="fieldlabelbold"><label for="saddr4">' + getSeaPhrase("ADDR_4", "ESS") + '</label></td>'
				+ '<td class="plaintablecell" nowrap><input class="inputbox" type="text" styler="textbox" id="saddr4" name="saddr4" value="' + fixQuote(EmpInfo.paemployee_supp_addr4) + '" size="30" maxlength="30" onfocus="this.select()"></td></tr>'
				+ '<tr><td class="fieldlabelbold"><label for="scity">' + getSeaPhrase("CITY_OR_ADDR_5", "ESS") + '</label></td>'
				+ '<td class="plaintablecell" nowrap><input class="inputbox" type="text" styler="textbox" id="scity" name="scity" value="' + fixQuote(EmpInfo.paemployee_supp_city) + '" size="18" maxlength="18" onfocus="this.select()"></td></tr>'
				+ '<tr><td class="fieldlabelbold"><label for="sstate">' + getSeaPhrase("HOME_ADDR_6", "ESS") + '</label></td>'
				+ '<td id="stateCell" class="plaintablecell" nowrap><select class="inputbox" styler="combobox" id="sstate" name="sstate">' + BuildStateSelect(EmpInfo.paemployee_supp_state) + '</select></td></tr>'
				+ '<tr><td class="fieldlabelbold"><label for="szip">' + getSeaPhrase("HOME_ADDR_7", "ESS") + '</label></td>'
				+ '<td class="plaintablecell" nowrap><input class="inputbox" class="fieldlabelbold" type="text" styler="textbox" id="szip" name="szip" value="' + fixQuote(EmpInfo.paemployee_supp_zip) + '" size="10" maxlength="10" onfocus="this.select()"></td></tr>'
				+ '<tr><td class="fieldlabelbold"><label for="scounty">' + getSeaPhrase("COUNTY_ONLY", "ESS") + '</label></td>'
				+ '<td class="plaintablecell" nowrap><input class="inputbox" type="text" styler="textbox" id="scounty" name="scounty" value="' + fixQuote(EmpInfo.paemployee_supp_county) + '" size="25" maxlength="25" onfocus="this.select()"></td></tr>'
				+ '<tr><td class="fieldlabelbold"><label for="scountry">' + getSeaPhrase("COUNTRY_ONLY", "ESS") + '</label></td>'
				+ '<td class="plaintablecell" nowrap><select class="inputbox" styler="combobox" id="scountry" name="scountry">' + DrawInstCtryCdSelect(EmpInfo.paemployee_supp_cntry_cd) + '</select></td></tr>'
				+ '<tr><td class="fieldlabelbold"><label for="supphonenbr">' + getSeaPhrase("PHONE", "ESS") + '</label></td>'
				+ '<td class="plaintablecell" nowrap><input class="inputbox" type="text" styler="textbox" id="supphonenbr" name="supphonenbr" value="' + fixQuote(EmpInfo.paemployee_supp_phone_nbr) + '" size="15" maxlength="15" onfocus="this.select()"></td></tr>'
				+ '<tr><td class="fieldlabelbold"><label id="supctrycd" for="supphonecntry" title="' + getSeaPhrase("COUNTRY_CODE_HELP_TEXT", "ESS") + '">' + getSeaPhrase("PHONE_COUNTRY_CODE", "ESS") + '</label></td>'
				+ '<td class="plaintablecell" nowrap><input class="inputbox" type="text" styler="textbox" id="supphonecntry" name="supphonecntry" value="' + fixQuote(EmpInfo.paemployee_supp_phone_cnt) + '" size="3" maxlength="3" onfocus="this.select()" aria-describedby="supphonecntryHelpTxt"><span id="supphonecntryHelpTxt" class="offscreen">' + getSeaPhrase("COUNTRY_CODE_HELP_TEXT", "ESS") + '</span></td></tr>'
				+ '<tr><td>&nbsp;</td><td class="plaintablecell">'
			if (parentTask != "" && parentTask != "main") {
				tab1Html += uiButton(getSeaPhrase("UPDATE","ESS"), "parent.validateAddress(1);return false", "margin-top:10px")
					+ uiButton(getSeaPhrase("CANCEL", "ESS"), "parent.FinishAddressChange()", "margin-left:5px;margin-top:10px")
			}
			else
				tab1Html += uiButton(getSeaPhrase("UPDATE","ESS"), "parent.validateAddress(1);return false", "margin-top:10px")
			tab1Html += '</td></tr></table></form>'
			// Draw the tabs with content
			addrTabs.draw = true;
			addrTabs.frame = self.MAIN;
			addrTabs.frame.document.getElementById("paneHeader").innerHTML = getSeaPhrase("HOME_ADDR_2", "ESS");
			addrTabs.tabHtml = new Array();
			addrTabs.tabHtml[0] = tab0Html;
			addrTabs.tabHtml[1] = tab1Html;
			addrTabs.create();
			addrTabs.frame.document.onload = function () { CheckTaxState(); };
			try {
				self.MAIN.stylePage();
				self.MAIN.setLayerSizes();
			}
			catch (e) { }
			var msg = getSeaPhrase("CNT_UPD_FRM", "SEA", [self.MAIN.getWinTitle()]);
			if (onLoad) {
				if (parentTask == "" || parentTask == "main")
					msg = ""
				else
					try { addrTabs.frame.frameElement.focus(); } catch (e) { }
			}
			stopProcessing(msg);
			// size the tab contents to fit the screen
			try {
				if (typeof (parent.fitToScreen) == "function")
					parent.fitToScreen();
				fitToScreen();
			}
			catch (e) { }
			onLoad = false;
		}

		// If the employee's tax state is in the supplemental address and the employee's
		// work country is U.S., display military codes in the state/province select.
		function CheckTaxState() {
			if (EmpInfo.work_country == "US" && EmpInfo.process_level_emp_tax_addr == 2) {
				try {
					var addrForm = self.MAIN.document.addressform;
					var stateOptions = addrForm.state.options;
					stateOptions[stateOptions.length] = new Option(getSeaPhrase("MILITARY_CODE_0", "ESS"), "AA");
					stateOptions[stateOptions.length] = new Option(getSeaPhrase("MILITARY_CODE_1", "ESS"), "AE");
					stateOptions[stateOptions.length] = new Option(getSeaPhrase("MILITARY_CODE_2", "ESS"), "AP");
				}
				catch (e) { }
			}
		}
		// tabNumber is the numbered value of the tab of which you are running the API (0='Home Address', 1='Supplemental Address')
		function validateAddress(tabNumber) {
			var addrform;
			var addr1, addr2, city, state, zip1;
			switch (tabNumber) {
				//Home tab
				case 0:
					addrform = addrTabs.frame.document.forms["addressform"];
					addr1 = encodeURIComponent(escapeXML(addrform.addr1.value));
					addr2 = encodeURIComponent(escapeXML(addrform.addr2.value));
					city = encodeURIComponent(escapeXML(addrform.city.value));
					state = encodeURIComponent(escapeXML(addrform.state.value));
					zip1 = encodeURIComponent(escapeXML(addrform.zip.value));
					break;
				//Supplemental tab
				case 1:
					addrform = addrTabs.frame.document.forms["supplementalform"];
					addr1 = encodeURIComponent(escapeXML(addrform.saddr1.value));
					addr2 = encodeURIComponent(escapeXML(addrform.saddr2.value));
					city = encodeURIComponent(escapeXML(addrform.scity.value));
					state = encodeURIComponent(escapeXML(addrform.sstate.value));
					zip1 = encodeURIComponent(escapeXML(addrform.szip.value));
					break;
				default:
					alert("error in validateAddress parameter");
					break;
			}
			var user_id = '729UHS005798';
			var schemeHost = "https://secure.shippingapis.com";
			/* Object to get USPS information */
			var xhr;
			if (window.XMLHttpRequest) {
				// IE7+, Firefox, Chrome, Opera, Safari
				xhr = new XMLHttpRequest();
			}
			else {
				//IE5, IE6
				//xhr = new ActiveXObject("Microsoft.XMLHTTP");
				alert("Invalid browser, please use chrome, firefox, or IE11+");
			}
			//DOMParser is only IE9+
			var inputParse = new DOMParser();
			// url for USPS
			var url = schemeHost + '/ShippingAPITest.dll?API=Verify&XML=<AddressValidateRequest USERID="' + user_id + '"><Address ID="0"><Address1>' + addr1 + '</Address1><Address2>' + addr2 + '</Address2><City>' + city + '</City><State>' + state + '</State><Zip5>' + zip1 + '</Zip5><Zip4></Zip4></Address></AddressValidateRequest>';
			//creating the XHR
			xhr.open("POST", url, true);
			// handle response
			xhr.onreadystatechange = function () {
				if (this.readyState === this.DONE && this.status == 200) {
					var parser = new DOMParser();
					var xmlDoc = parser.parseFromString(this.responseText, "text/xml");
					/* Populate fields from USPS return */
					if (xmlDoc.getElementsByTagName("Error")[0] != null) {
						alert(xmlDoc.getElementsByTagName("Description")[0].textContent);
						return;
					}
					else if (xmlDoc.getElementsByTagName("ReturnText")[0] != null) {
						alert(xmlDoc.getElementsByTagName("ReturnText")[0].textContent);
						return;
					}
					else {
						//if the tag exists
						switch (tabNumber) {
							case 0:
								// addr1 and addr2 switched, because addr1 is apt# according to USPS protocol
								if (xmlDoc.getElementsByTagName("Address1").length) {
									addrform.addr2.value = xmlDoc.getElementsByTagName("Address1")[0].textContent;
								}
								else { addrform.addr2.value = ""; }
								if (xmlDoc.getElementsByTagName("Address2").length) {
									addrform.addr1.value = xmlDoc.getElementsByTagName("Address2")[0].textContent;
								}
								else { addrform.addr1.value = ""; }
								if (xmlDoc.getElementsByTagName("City").length) {
									addrform.city.value = xmlDoc.getElementsByTagName("City")[0].textContent;
								}
								if (xmlDoc.getElementsByTagName("State").length) {
									addrform.state.value = xmlDoc.getElementsByTagName("State")[0].textContent;
								}
								if (xmlDoc.getElementsByTagName("Zip5").length) {
									addrform.zip.value = xmlDoc.getElementsByTagName("Zip5")[0].textContent;
								}
								break;
							//supplemental address
							case 1:
								if (xmlDoc.getElementsByTagName("Address1").length) {
									addrform.saddr2.value = xmlDoc.getElementsByTagName("Address1")[0].textContent;
								}
								else { addrform.saddr2.value = ""; }
								if (xmlDoc.getElementsByTagName("Address2").length) {
									addrform.saddr1.value = xmlDoc.getElementsByTagName("Address2")[0].textContent;
								}
								else { addrform.saddr1.value = ""; }
								if (xmlDoc.getElementsByTagName("City").length) {
									addrform.scity.value = xmlDoc.getElementsByTagName("City")[0].textContent;
								}
								if (xmlDoc.getElementsByTagName("State").length) {
									addrform.sstate.value = xmlDoc.getElementsByTagName("State")[0].textContent;
								}
								if (xmlDoc.getElementsByTagName("Zip5").length) {
									addrform.szip.value = xmlDoc.getElementsByTagName("Zip5")[0].textContent;
								}
								break;
							default:
								alert("no address tab selected");
								break;
						}
						//if our API has successfully returned, resume regular move event handling
						ProcessMoveEvent();
					}
				}
			}
			function escapeXML(needEsc) {
				return needEsc.replace(/[<>&'"]/g, function (c) {
					switch (c) {
						case '<': return '&lt;';
						case '>': return '&gt;';
						case '&': return '&amp;';
						case '\'': return '&apos;';
						case '"': return '&quot;';
					}
				});
			}
			//send 
			xhr.send(url);
		}

		function ProcessMoveEvent() {
			addrform = addrTabs.frame.document.forms["addressform"];
			saddrform = addrTabs.frame.document.forms["supplementalform"];
			clearRequiredField(addrform.dateneeded);
			clearRequiredField(addrform.addr1);
			clearRequiredField(self.MAIN.document.getElementById("stateCell"));
			clearRequiredField(addrform.hmphonenbr);
			clearRequiredField(addrform.hmphonecntry);
			if (NonSpace(addrform.hmphonenbr.value) > 0 && !ValidPhoneEntry(addrform.hmphonenbr)) {
				addrTabs.frame.tabOnClick(addrTabs.frame.document.getElementById("addrTabs_TabBody_0"));
				setRequiredField(addrform.hmphonenbr, getSeaPhrase("PHONE_NBR_ERROR", "ESS"));
				return;
			}
			if (NonSpace(addrform.hmphonecntry.value) > 0 && !ValidPhoneEntry(addrform.hmphonecntry)) {
				addrTabs.frame.tabOnClick(addrTabs.frame.document.getElementById("addrTabs_TabBody_0"));
				setRequiredField(addrform.hmphonecntry, getSeaPhrase("PHONE_COUNTRY_CODE_ERROR", "ESS"));
				return;
			}
			if (NonSpace(saddrform.supphonenbr.value) > 0 && !ValidPhoneEntry(saddrform.supphonenbr)) {
				addrTabs.frame.tabOnClick(addrTabs.frame.document.getElementById("addrTabs_TabBody_1"));
				setRequiredField(saddrform.supphonenbr, getSeaPhrase("PHONE_NBR_ERROR", "ESS"));
				return;
			}
			if (NonSpace(saddrform.supphonecntry.value) > 0 && !ValidPhoneEntry(saddrform.supphonecntry)) {
				addrTabs.frame.tabOnClick(addrTabs.frame.document.getElementById("addrTabs_TabBody_1"));
				setRequiredField(saddrform.supphonecntry, getSeaPhrase("PHONE_COUNTRY_CODE_ERROR", "ESS"));
				return;
			}
			if (IsEqual(EmpInfo.addr1, addrform.addr1.value) && IsEqual(EmpInfo.addr2, addrform.addr2.value) &&
				IsEqual(EmpInfo.addr3, addrform.addr3.value) && IsEqual(EmpInfo.addr4, addrform.addr4.value) &&
				IsEqual(EmpInfo.city, addrform.city.value) && IsEqual(EmpInfo.zip, addrform.zip.value) &&
				IsEqual(EmpInfo.county, addrform.county.value) && IsEqual(EmpInfo.paemployee_hm_phone_cntry, addrform.hmphonecntry.value) &&
				IsEqual(EmpInfo.paemployee_hm_phone_nbr, addrform.hmphonenbr.value) && IsEqual(EmpInfo.country_code, addrform.country.options[addrform.country.selectedIndex].value) &&
				IsEqual(EmpInfo.state, addrform.state.options[addrform.state.selectedIndex].value)) {
				AddType = "S";
			}
			if (AddType == "S" && IsEqual(EmpInfo.paemployee_supp_addr1, saddrform.saddr1.value) && IsEqual(EmpInfo.paemployee_supp_addr2, saddrform.saddr2.value) &&
				IsEqual(EmpInfo.paemployee_supp_addr3, saddrform.saddr3.value) && IsEqual(EmpInfo.paemployee_supp_addr4, saddrform.saddr4.value) &&
				IsEqual(EmpInfo.paemployee_supp_city, saddrform.scity.value) && IsEqual(EmpInfo.paemployee_supp_zip, saddrform.szip.value) &&
				IsEqual(EmpInfo.paemployee_supp_county, saddrform.scounty.value) &&
				IsEqual(EmpInfo.paemployee_supp_phone_cnt, saddrform.supphonecntry.value) &&
				IsEqual(EmpInfo.paemployee_supp_phone_nbr, saddrform.supphonenbr.value) &&
				IsEqual(EmpInfo.paemployee_supp_cntry_cd, saddrform.scountry.options[saddrform.scountry.selectedIndex].value) &&
				IsEqual(EmpInfo.paemployee_supp_state, saddrform.sstate.options[saddrform.sstate.selectedIndex].value)) {
				AddType = "H";
				addrTabs.frame.tabOnClick(addrTabs.frame.document.getElementById("addrTabs_TabBody_0"));
				parent.seaAlert(getSeaPhrase("HOME_ADDR_12", "ESS"), null, null, "error");
				return;
			}
			else // Make sure we pass a space for any blank fields, or they won't be cleared on the HR11 form.
			{
				if (addrform.addr1.value == "") addrform.addr1.value = " ";
				if (addrform.addr2.value == "") addrform.addr2.value = " ";
				if (addrform.addr3.value == "") addrform.addr3.value = " ";
				if (addrform.addr4.value == "") addrform.addr4.value = " ";
				if (addrform.city.value == "") addrform.city.value = " ";
				if (addrform.zip.value == "") addrform.zip.value = " ";
				if (addrform.county.value == "") addrform.county.value = " ";
				if (addrform.hmphonecntry.value == "") addrform.hmphonecntry.value = " ";
				if (addrform.hmphonenbr.value == "") addrform.hmphonenbr.value = " ";
				if (addrform.country.options[addrform.country.selectedIndex].value == "")
					addrform.country.options[addrform.country.selectedIndex].value = " ";
				if (addrform.state.options[addrform.state.selectedIndex].value == "")
					addrform.state.options[addrform.state.selectedIndex].value = " ";
				if (saddrform.saddr1.value == "") saddrform.saddr1.value = " ";
				if (saddrform.saddr2.value == "") saddrform.saddr2.value = " ";
				if (saddrform.saddr3.value == "") saddrform.saddr3.value = " ";
				if (saddrform.saddr4.value == "") saddrform.saddr4.value = " ";
				if (saddrform.scity.value == "") saddrform.scity.value = " ";
				if (saddrform.szip.value == "") saddrform.szip.value = " ";
				if (saddrform.scounty.value == "") saddrform.scounty.value = " ";
				if (saddrform.supphonecntry.value == "") saddrform.supphonecntry.value = " ";
				if (saddrform.supphonenbr.value == "") saddrform.supphonenbr.value = " ";
				if (saddrform.scountry.options[saddrform.scountry.selectedIndex].value == "")
					saddrform.scountry.options[saddrform.scountry.selectedIndex].value = " ";
				if (saddrform.sstate.options[saddrform.sstate.selectedIndex].value == "")
					saddrform.sstate.options[saddrform.sstate.selectedIndex].value = " ";
			}
			EmailError = false;
			startProcessing(getSeaPhrase("HOME_ADDR_42", "ESS"), CallHR11);
		}

		function CallHR11(TaxError) {
			if (typeof (parent.EmpInfo) != "undefined" && parent.EmpInfo != null)
				parent.EmpInfo = EmpInfo;
			var pObj = new AGSObject(authUser.prodline, "HR11.1");
			pObj.event = "CHANGE";
			pObj.rtn = "MESSAGE";
			pObj.longNames = "ALL";
			pObj.tds = false;
			pObj.field = "FC=C"
				+ "&EFFECT-DATE=" + formjsDate(formatDME(addrform.dateneeded.value))
				+ "&EMP-COMPANY=" + authUser.company
				+ "&EMP-EMPLOYEE=" + authUser.employee
				+ "&EMP-ADDR1=" + escape(addrform.addr1.value, 1)
				+ "&EMP-ADDR2=" + escape(addrform.addr2.value, 1)
				+ "&EMP-ADDR3=" + escape(addrform.addr3.value, 1)
				+ "&EMP-ADDR4=" + escape(addrform.addr4.value, 1)
				+ "&EMP-CITY=" + escape(addrform.city.value, 1)
				+ "&EMP-STATE=" + escape(addrform.state.options[addrform.state.selectedIndex].value, 1)
				+ "&EMP-ZIP=" + escape(addrform.zip.value, 1)
				+ "&EMP-COUNTY=" + escape(addrform.county.value, 1)
				+ "&EMP-COUNTRY-CODE=" + escape(addrform.country.options[addrform.country.selectedIndex].value, 1)
				+ "&PEM-HM-PHONE-CNTRY=" + escape(addrform.hmphonecntry.value, 1)
				+ "&PEM-HM-PHONE-NBR=" + escape(addrform.hmphonenbr.value, 1)
				+ "&PEM-SUPP-ADDR1=" + escape(saddrform.saddr1.value, 1)
				+ "&PEM-SUPP-ADDR2=" + escape(saddrform.saddr2.value, 1)
				+ "&PEM-SUPP-ADDR3=" + escape(saddrform.saddr3.value, 1)
				+ "&PEM-SUPP-ADDR4=" + escape(saddrform.saddr4.value, 1)
				+ "&PEM-SUPP-CITY=" + escape(saddrform.scity.value, 1)
				+ "&PEM-SUPP-STATE=" + escape(saddrform.sstate.options[saddrform.sstate.selectedIndex].value, 1)
				+ "&PEM-SUPP-ZIP=" + escape(saddrform.szip.value, 1)
				+ "&PEM-SUPP-COUNTY=" + escape(saddrform.scounty.value, 1)
				+ "&PEM-SUPP-CNTRY-CD=" + escape(saddrform.scountry.options[saddrform.scountry.selectedIndex].value, 1)
				+ "&PEM-SUPP-PHONE-CNT=" + escape(saddrform.supphonecntry.value, 1)
				+ "&PEM-SUPP-PHONE-NBR=" + escape(saddrform.supphonenbr.value, 1)
				+ "&XMIT-REQDED=1"
				+ "&PT-BYPASS-PERS-ACT=1"
				+ "&USER-ID=W" + parseInt(authUser.employee, 10);
			if (TaxError)
				pObj.field += "&XMIT-HREMP-BLOCK=1000000000";
			else
				pObj.field += "&XMIT-HREMP-BLOCK=0111110000";
			pObj.func = "parent.DisplayMessage()";
			pObj.debug = false;
			AGS(pObj, "jsreturn");
		}

		function IsEqual(ObjA, ObjB) {
			if ((ObjA == ObjB) || (NonSpace(ObjA) == 0 && NonSpace(ObjB) == 0))
				return true;
			else
				return false;
		}

		function OpenHelpDialog() {
			if (isEnwisenEnabled())
				openEnwisenWindow("id=MOVE");
			else
				openHelpDialogWindow("/lawson/xhrnet/addrtip.htm");
		}

		function ReturnDate(date) {
			self.MAIN.document.addressform.elements[date_fld_name].value = date;
		}

		function DisplayMessage() {
			var msgnbr = parseInt(self.lawheader.gmsgnbr, 10);
			if (msgnbr == 0) // HR11 updated the address successfully
				AddressChangeSucceeded();
			else // HR11 error
			{
				if (typeof (EmailTo) == "undefined" || EmailTo == null || NonSpace(EmailTo) == 0) // SYSRULES email is blank
				{
					stopProcessing();
					if (msgnbr == 100 || msgnbr == 105) // Tax Locator error message
						parent.seaAlert(getSeaPhrase("HOME_ADDR_13", "ESS"), null, null, "error");
					else
						parent.seaAlert(getSeaPhrase("HOME_ADDR_14", "ESS") + "\n\n(" + self.lawheader.gmsg + ")", null, null, "error");
				}
				else if (!EmailError && (msgnbr == 100 || msgnbr == 105)) // Tax Locator error message
				{
					EmailError = true;
					CallHR11(true); // Tell HR11 to ignore Tax Locator errors
				}
				else {
					stopProcessing();
					parent.seaAlert(getSeaPhrase("HOME_ADDR_14", "ESS") + "\n\n(" + self.lawheader.gmsg + ")", null, null, "error");
				}
			}
		}

		function AddressChangeSucceeded() {
			stopProcessing(getSeaPhrase("CNT_UPD_FRM", "SEA", [self.MAIN.getWinTitle()]));
			parent.seaPageMessage(getSeaPhrase("UPDATE_COMPLETE", "ESS"), null, null, "info", null, true, getSeaPhrase("APPLICATION_ALERT", "SEA"), true);
			// Do we create an email?
			if ((parseInt(DoEmail, 10) == 1 || (parseInt(DoEmail, 10) == 2 && EmailError)) && typeof (EmailTo) != "undefined" && EmailTo != null && NonSpace(EmailTo) != 0)
				SendEmail();
			else
				FinishAddressChange();
		}

		// Hide the address change frame if this is a Life Event; otherwise, navigate to the related links for an address change.
		function FinishAddressChange() {
			if (parentTask != "" && parentTask != "main") {
				try { parent.toggleFrame("right", false); } catch (e) { }
				try { parent.left.MAIN.document.getElementById("closebtn").style.visibility = "visible"; } catch (e) { }
			}
			else {
				try { parent.document.getElementById("left").focus(); } catch (e) { }
				parent.left.location.replace("/lawson/xhrnet/address.htm?date=" + escape(self.MAIN.document.addressform.dateneeded.value, 1) + "&addresstype=" + escape(AddType, 1));
				removeHelpIcon();
			}
			// display the checkmark indicating that this task has been accessed.
			try { parent.left.setImageVisibility("homeaddress_checkmark", "visible"); } catch (e) { }
		}

		function SendEmail() {
			var SuppFlag = false;
			var TaxFlag = false;
			var OldState = EmpInfo.state
			var NewState = addrform.state.options[addrform.state.selectedIndex].value
			// Check tax filter values to see if local tax authority fields may need to be changed.
			if ((parseInt(EmpInfo.tax_filter, 10) == 2 || parseInt(EmpInfo.tax_filter, 10) == 3)
				|| ((!EmpInfo.tax_filter || isNaN(parseFloat(EmpInfo.tax_filter))) && (parseInt(EmpInfo.process_level_tax_filter, 10) == 2 || parseInt(EmpInfo.process_level_tax_filter, 10) == 3))) {
				TaxFlag = true;
			}
			// Check to see if any supplemental address fields have changed.
			if (!IsEqual(EmpInfo.paemployee_supp_addr1, saddrform.saddr1.value) || !IsEqual(EmpInfo.paemployee_supp_addr2, saddrform.saddr2.value) ||
				!IsEqual(EmpInfo.paemployee_supp_addr3, saddrform.saddr3.value) || !IsEqual(EmpInfo.paemployee_supp_addr4, saddrform.saddr4.value) ||
				!IsEqual(EmpInfo.paemployee_supp_city, saddrform.scity.value) || !IsEqual(EmpInfo.paemployee_supp_zip, saddrform.szip.value) ||
				!IsEqual(EmpInfo.paemployee_supp_county, saddrform.scounty.value) || !IsEqual(EmpInfo.paemployee_supp_phone_cnt, saddrform.supphonecntry.value) ||
				!IsEqual(EmpInfo.paemployee_supp_phone_nbr, saddrform.supphonenbr.value) || !IsEqual(EmpInfo.paemployee_supp_cntry_cd, saddrform.scountry.options[saddrform.scountry.selectedIndex].value) ||
				!IsEqual(EmpInfo.paemployee_supp_state, saddrform.sstate.options[saddrform.sstate.selectedIndex].value)) {
				SuppFlag = true;
			}
			if (emssObjInstance.emssObj.processFlowsEnabled) {
				var techVersion = (iosHandler && iosHandler.getIOSVersionNumber() >= "09.00.00") ? ProcessFlowObject.TECHNOLOGY_900 : ProcessFlowObject.TECHNOLOGY_803;
				var httpRequest = (typeof (SSORequest) == "function") ? SSORequest : SEARequest;
				var pfObj = new ProcessFlowObject(window, techVersion, httpRequest, "EMSS");
				pfObj.setEncoding(authUser.encoding);
				pfObj.showErrors = false;

				var taxErrorFlag = (EmailError) ? "Y" : "N";
				var taxFilterFlag = (TaxFlag) ? "Y" : "N";
				var flowObj = pfObj.setFlow("EMSSAddrChg", Workflow.SERVICE_EVENT_TYPE, Workflow.ERP_SYSTEM,
					authUser.prodline, authUser.webuser, null, "");
				flowObj.addVariable("empData", String(authUser.company) + "," + String(authUser.employee) + "," + String(taxErrorFlag) + "," + String(taxFilterFlag) + "," + String(emssObjInstance.emssObj.emailFormat));
				flowObj.addVariable("oldAddress1", String(EmpInfo.addr1).substring(0, 45));
				flowObj.addVariable("oldAddress2", String(EmpInfo.addr2).substring(0, 45));
				flowObj.addVariable("oldAddress3", String(EmpInfo.addr3).substring(0, 45));
				flowObj.addVariable("oldAddress4", String(EmpInfo.addr4).substring(0, 45));
				flowObj.addVariable("oldAddress5", normalizeField(OldState, 2) + normalizeField(EmpInfo.zip, 10) + normalizeField(EmpInfo.country_code, 2) + normalizeField(EmpInfo.county, 25) + normalizeField(EmpInfo.paemployee_hm_phone_cntry, 6));
				flowObj.addVariable("oldAddress6", normalizeField(EmpInfo.city, 18) + normalizeField(EmpInfo.paemployee_hm_phone_nbr, 15) + normalizeField(String(EmpInfo.addr1).substring(45, 57), 12));
				flowObj.addVariable("oldAddress7", normalizeField(String(EmpInfo.addr2).substring(45, 57), 12) + normalizeField(String(EmpInfo.addr3).substring(45, 57), 12) + normalizeField(String(EmpInfo.addr4).substring(45, 57), 12));
				if (SuppFlag) {
					flowObj.addVariable("oldAddress8", String(EmpInfo.paemployee_supp_addr1).substring(0, 45));
					flowObj.addVariable("oldAddress9", String(EmpInfo.paemployee_supp_addr2).substring(0, 45));
					flowObj.addVariable("oldAddress10", String(EmpInfo.paemployee_supp_addr3).substring(0, 45));
					flowObj.addVariable("oldAddress11", String(EmpInfo.paemployee_supp_addr4).substring(0, 45));
					flowObj.addVariable("oldAddress12", normalizeField(EmpInfo.paemployee_supp_state, 2) + normalizeField(EmpInfo.paemployee_supp_zip, 10) + normalizeField(EmpInfo.paemployee_supp_cntry_cd, 2) + normalizeField(EmpInfo.paemployee_supp_county, 25) + normalizeField(EmpInfo.paemployee_supp_phone_cnt, 6));
					flowObj.addVariable("oldAddress13", normalizeField(EmpInfo.paemployee_supp_city, 18) + normalizeField(EmpInfo.paemployee_supp_phone_nbr, 15) + normalizeField(String(EmpInfo.paemployee_supp_addr1).substring(45, 57), 12));
					flowObj.addVariable("oldAddress14", normalizeField(String(EmpInfo.paemployee_supp_addr2).substring(45, 57), 12) + normalizeField(String(EmpInfo.paemployee_supp_addr3).substring(45, 57), 12) + normalizeField(String(EmpInfo.paemployee_supp_addr4).substring(45, 57), 12));
				}
				pfObj.triggerFlow();
				FinishAddressChange();
				return;
			}
			var pObj = new EMAILObject(EmailTo, EmailFrom)
			pObj.subject = getSeaPhrase("HOME_ADDR_15", "ESS");
			pObj.message = getSeaPhrase("JOB_PROFILE_2", "ESS") + ": " + authUser.employee
				+ "\n" + getSeaPhrase("EMPLOYEE_NAME", "ESS") + ": " + EmpInfo.first_name + " " + EmpInfo.last_name
				+ "\n" + getSeaPhrase("HOME_ADDR_16", "ESS") + ": XXX-XX-" + EmpInfo.fica_nbr.toString().substring(EmpInfo.fica_nbr.toString().length - 4, EmpInfo.fica_nbr.toString().length)
				+ "\n" + getSeaPhrase("HOME_ADDR_17", "ESS") + ": " + EmpInfo.process_level
				+ "\n" + getSeaPhrase("HOME_ADDR_18", "ESS") + ": " + EmpInfo.department
				+ "\n\n" + getSeaPhrase("HOME_ADDR_0", "ESS") + ":"
				+ "\n" + getSeaPhrase("HOME_ADDR_19", "ESS") + ": " + EmpInfo.addr1
				+ "\n" + getSeaPhrase("HOME_ADDR_20", "ESS") + ": " + EmpInfo.addr2
				+ "\n" + getSeaPhrase("HOME_ADDR_21", "ESS") + ": " + EmpInfo.addr3
				+ "\n" + getSeaPhrase("HOME_ADDR_22", "ESS") + ": " + EmpInfo.addr4
				+ "\n" + getSeaPhrase("HOME_ADDR_23", "ESS") + ": " + EmpInfo.city
				+ "\n" + getSeaPhrase("HOME_ADDR_24", "ESS") + ": " + OldState
				+ "\n" + getSeaPhrase("HOME_ADDR_25", "ESS") + ": " + EmpInfo.zip
				+ "\n" + getSeaPhrase("HOME_ADDR_26", "ESS") + ": " + EmpInfo.county
				+ "\n" + getSeaPhrase("HOME_ADDR_27", "ESS") + ": " + EmpInfo.country_code
				+ "\n" + getSeaPhrase("HOME_ADDR_28", "ESS") + ": " + EmpInfo.paemployee_hm_phone_cntry
				+ "\n" + getSeaPhrase("HOME_ADDR_29", "ESS") + ": " + EmpInfo.paemployee_hm_phone_nbr
				+ "\n\n" + getSeaPhrase("HOME_ADDR_30", "ESS") + ": " + addrform.addr1.value
				+ "\n" + getSeaPhrase("HOME_ADDR_31", "ESS") + ": " + addrform.addr2.value
				+ "\n" + getSeaPhrase("HOME_ADDR_32", "ESS") + ": " + addrform.addr3.value
				+ "\n" + getSeaPhrase("HOME_ADDR_33", "ESS") + ": " + addrform.addr4.value
				+ "\n" + getSeaPhrase("HOME_ADDR_34", "ESS") + ": " + addrform.city.value
				+ "\n" + getSeaPhrase("HOME_ADDR_35", "ESS") + ": " + NewState
				+ "\n" + getSeaPhrase("HOME_ADDR_36", "ESS") + ": " + addrform.zip.value
				+ "\n" + getSeaPhrase("HOME_ADDR_37", "ESS") + ": " + addrform.county.value
				+ "\n" + getSeaPhrase("HOME_ADDR_38", "ESS") + ": " + addrform.country.options[addrform.country.selectedIndex].value
				+ "\n" + getSeaPhrase("HOME_ADDR_39", "ESS") + ": " + addrform.hmphonecntry.value
				+ "\n" + getSeaPhrase("HOME_ADDR_40", "ESS") + ": " + addrform.hmphonenbr.value
			if (SuppFlag) {
				pObj.message += "\n\n" + getSeaPhrase("HOME_ADDR_51", "ESS") + ":"
					+ "\n" + getSeaPhrase("HOME_ADDR_19", "ESS") + ": " + EmpInfo.paemployee_supp_addr1
					+ "\n" + getSeaPhrase("HOME_ADDR_20", "ESS") + ": " + EmpInfo.paemployee_supp_addr2
					+ "\n" + getSeaPhrase("HOME_ADDR_21", "ESS") + ": " + EmpInfo.paemployee_supp_addr3
					+ "\n" + getSeaPhrase("HOME_ADDR_22", "ESS") + ": " + EmpInfo.paemployee_supp_addr4
					+ "\n" + getSeaPhrase("HOME_ADDR_23", "ESS") + ": " + EmpInfo.paemployee_supp_city
					+ "\n" + getSeaPhrase("HOME_ADDR_24", "ESS") + ": " + EmpInfo.paemployee_supp_state
					+ "\n" + getSeaPhrase("HOME_ADDR_25", "ESS") + ": " + EmpInfo.paemployee_supp_zip
					+ "\n" + getSeaPhrase("HOME_ADDR_26", "ESS") + ": " + EmpInfo.paemployee_supp_county
					+ "\n" + getSeaPhrase("HOME_ADDR_27", "ESS") + ": " + EmpInfo.paemployee_supp_cntry_cd
					+ "\n" + getSeaPhrase("HOME_ADDR_28", "ESS") + ": " + EmpInfo.paemployee_supp_phone_cnt
					+ "\n" + getSeaPhrase("HOME_ADDR_29", "ESS") + ": " + EmpInfo.paemployee_supp_phone_nbr
					+ "\n\n" + getSeaPhrase("HOME_ADDR_30", "ESS") + ": " + saddrform.saddr1.value
					+ "\n" + getSeaPhrase("HOME_ADDR_31", "ESS") + ": " + saddrform.saddr2.value
					+ "\n" + getSeaPhrase("HOME_ADDR_32", "ESS") + ": " + saddrform.saddr3.value
					+ "\n" + getSeaPhrase("HOME_ADDR_33", "ESS") + ": " + saddrform.saddr4.value
					+ "\n" + getSeaPhrase("HOME_ADDR_34", "ESS") + ": " + saddrform.scity.value
					+ "\n" + getSeaPhrase("HOME_ADDR_35", "ESS") + ": " + saddrform.sstate.options[saddrform.sstate.selectedIndex].value
					+ "\n" + getSeaPhrase("HOME_ADDR_36", "ESS") + ": " + saddrform.szip.value
					+ "\n" + getSeaPhrase("HOME_ADDR_37", "ESS") + ": " + saddrform.scounty.value
					+ "\n" + getSeaPhrase("HOME_ADDR_38", "ESS") + ": " + saddrform.scountry.options[saddrform.scountry.selectedIndex].value
					+ "\n" + getSeaPhrase("HOME_ADDR_39", "ESS") + ": " + saddrform.supphonecntry.value
					+ "\n" + getSeaPhrase("HOME_ADDR_40", "ESS") + ": " + saddrform.supphonenbr.value
			}
			if (EmailError)
				pObj.message += "\n\n" + getSeaPhrase("HOME_ADDR_41", "ESS");
			// Check tax filter values to see if local tax authority fields may need to be changed.
			if (TaxFlag)
				pObj.message += "\n\n" + getSeaPhrase("HOME_ADDR_48", "ESS");
			timer = setTimeout("cgiEmailDone()", 3000);
			EMAIL(pObj, "jsreturn");
		}

		function normalizeField(fldVal, fldLen) {
			if (typeof (fldVal) != "undefined") {
				fldVal = fldVal.toString();
				for (var i = fldVal.length; i < fldLen; i++)
					fldVal += " ";
			}
			return fldVal;
		}

		function cgiEmailDone() {
			clearTimeout(timer);
			FinishAddressChange();
		}

		function fitToScreen() {
			if (typeof (window["styler"]) == "undefined" || window.styler == null)
				window.stylerWnd = findStyler(true);
			if (!window.stylerWnd)
				return;
			if (typeof (window.stylerWnd["StylerEMSS"]) == "function")
				window.styler = new window.stylerWnd.StylerEMSS();
			else
				window.styler = window.stylerWnd.styler;
			var mainFrame = document.getElementById("MAIN");
			var winObj = getWinSize();
			var winWidth = winObj[0];
			var winHeight = winObj[1];
			var hdrHeight = 32;
			var contentHeight;
			var contentBorderHeight;
			var contentWidth;
			var contentBorderWidth;
			var tabHeight;
			var tabWidth;
			if (window.styler && window.styler.showInfor) {
				contentWidth = winWidth - 10;
				var elmPad = 2;
				if ((navigator.appName.indexOf("Microsoft") >= 0) && (!document.documentMode || document.documentMode < 8))
					elmPad = 7;
				contentBorderWidth = contentWidth + elmPad;
				contentHeight = winHeight - hdrHeight;
				contentBorderHeight = contentHeight + 30;
				tabHeight = contentHeight + 25;
				tabWidth = contentWidth;
			}
			else if (window.styler && (window.styler.showLDS || window.styler.showInfor3)) {
				contentWidth = winWidth - 20;
				contentBorderWidth = (window.styler.showInfor3) ? contentWidth + 7 : contentWidth + 17;
				contentHeight = winHeight - hdrHeight;
				contentBorderHeight = contentHeight + 30;
				tabHeight = contentHeight + 25;
				tabWidth = contentWidth;
			}
			else {
				contentWidth = winWidth - 10;
				contentBorderWidth = contentWidth;
				contentHeight = winHeight - hdrHeight;
				contentBorderHeight = contentHeight + 24;
				tabHeight = contentHeight + 30;
				tabWidth = contentWidth;
			}
			mainFrame.style.width = winWidth + "px";
			mainFrame.style.height = winHeight + "px";
			// disable the onresize window event if it exists - we don't want the elements in the frame to resize themselves
			if (self.MAIN.onresize && self.MAIN.onresize.toString().indexOf("setLayerSizes") >= 0)
				self.MAIN.onresize = null;
			try {
				self.MAIN.document.getElementById("paneBorder").style.width = contentBorderWidth + "px";
				self.MAIN.document.getElementById("paneBorder").style.height = contentBorderHeight + "px";
				self.MAIN.document.getElementById("paneBodyBorder").style.height = contentHeight + "px";
				self.MAIN.document.getElementById("paneBodyBorder").style.width = contentWidth + "px";
				self.MAIN.document.getElementById("paneBody").style.width = contentWidth + "px";
				self.MAIN.document.getElementById("paneBody").style.height = contentHeight + "px";
			}
			catch (e) { }
			try {
				if (window.styler && window.styler.showInfor && (navigator.appName.indexOf("Microsoft") >= 0) && (!document.documentMode || (document.documentMode < 8)))
					tabWidth += 20;
				if (typeof (addrTabs) != "undefined") {
					// the theme 10.3 HTML5 control may take time to render tab contents, so wait before sizing
					var delayInMS = (window.styler && window.styler.showInfor3) ? 200 : 1;
					setTimeout(function () { setTabContentSizes("addrTabs", addrTabs.frame, tabWidth, tabHeight); }, delayInMS);
				}
			}
			catch (e) { }
		}
	</script>
</head>

<body class="panecontents" style="width:100%;height:100%;overflow:hidden" onload="fitToScreen();OpenMoveEvent()" onresize="fitToScreen()">
	<iframe id="MAIN" name="MAIN" title="Main Content" level="2" tabindex="0" src="/lawson/xhrnet/ui/innertabpanehelp.htm" style="position:absolute;left:0px;width:100%;top:0px;height:555px"
	 frameborder="no" marginwidth="0" marginheight="0" scrolling="no"></iframe>
	<iframe id="jsreturn" name="jsreturn" title="" style="visibility:hidden;height:0px;width:0px;" src="/lawson/xhrnet/dot.htm"
	 frameborder="no" marginwidth="0" marginheight="0" scrolling="no"></iframe>
	<iframe id="lawheader" name="lawheader" title="" style="visibility:hidden;height:0px;width:0px;" src="/lawson/xhrnet/errmsg.htm"
	 frameborder="no" marginwidth="0" marginheight="0" scrolling="no"></iframe>
</body>
<!-- Version: 8-)@(#)@10.00.06.00.25 -->
<!-- $Header: /cvs/cvs_archive/applications/webtier/shr/src/xhrnet/empaddress.htm,v 1.19.2.92.2.1 2015/01/29 18:22:46 brentd Exp $ -->
<!--************************************************************